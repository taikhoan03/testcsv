@model IEnumerable<BL.FieldOrderAndAction>
<style>
    
    #lblLoading {
        color: #ff0000;
        font-size: 14pt;
    }

    .content-wrapper {
        overflow: auto;
    }

    .table {
        white-space: nowrap;
        border-collapse: collapse;
        border-spacing: 0px;
        border: solid 1px rgba(48, 44, 44, 0.90);
        border-radius: 4px;
    }

        .table tr > th, .table tr > td {
            padding: 2px 4px 2px 4px;
            border-right: solid 1px #818181;
        }
        #tSample .table td{white-space:pre}
    .operator{
        background: #86e120 none repeat scroll 0 0;
        border: 1px solid;
        cursor: pointer;
        float: left;
        height: 35px;
        padding: 8px;
        position: relative;
        text-align: center;
        vertical-align: middle;
        width: 25%;
    }
    
    
</style>
<style>
    #cboxCondition,#cboxFormatting,#cboxMISCELLANEOUS,#cboxLookup{
        background-color: rgba(50, 150, 50, 0.61);
    border: 1px solid #ffddff;
    border-radius: 5px;
    font-size: 14pt;
    font-weight: bold;
    padding: 6px;
    }
    #CONDITIONAL_r,#FORMATTING_r,#MISCELLANEOUS_r,,#LOOPUP_r{
        min-height:300px;
        
    }
</style>
<link href="~/Content/css/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Content/js/plugins/jquery-ui.min.js"></script>
<script src="~/Content/js/plugins/tempo/tempo.min.js"></script>
<script src="~/scripts/custom/app.js"></script>
<script src="~/Content/js/Underscore1.8.3-min.js"></script>
<script src="~/Content/js/plugins/jquery-sortable.js"></script>
<h3 id="lblData">
    <div>State: <label id="lblState">@ViewBag.WorkingSetInfo.State</label></div>
    <div>County: <label id="lblCounty">@ViewBag.WorkingSetInfo.County</label></div>
    <div>File: <label id="lblFile">@ViewBag.Filename</label></div>
    <div><a href="@Url.Action("Layout2","WorkingSet")/@ViewBag.WorkingSetInfo.Id?fid=@ViewBag.ID">Define Layout</a></div>
</h3>
<div id="div-tab">
    <ul>
        <li><a href="#div_action">SORT</a></li>
        <li><a href="#rules">RULES</a></li>
        <li><a href="#preview">PREVIEW & DOWNLOAD</a></li>
    </ul>
    <div id="div_action" style="height:500px;overflow:scroll">
        <table id="tbl_sort" class="table">
            <tr style="background:#3ae5e3">
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WorkingSetItemId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FieldName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order)
                </th>
                <th>
                    Sort
                </th>
                <th style="text-align:center">
                    Duplicate Action
                    <select style="color:red" class="form-control" onchange="updateAction_all($(this))">
                        <option value="-1" selected="selected"></option>
                        <option value="0">Response with Error</option>
                        <option value="1">KeepAllRows</option>
                        <option value="2">PickupFirstValue</option>
                        <option value="3">PickupLastValue</option>
                        <option value="4">PickupFirstUn_NULL_value</option>
                        <option value="5">PickupMaximumValue</option>
                        <option value="6">PickupMinimumValue</option>
                        <option value="7">SumAllRow</option>
                        <option value="8">ConcatenateWithDelimiter</option>
                        
                    </select>
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkingSetItemId)
                    </td>
                    <td>
                        <span>@Html.DisplayFor(modelItem => item.FieldName)</span>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order)
                    </td>
                    <td>
                        <select class="form-control" onchange="updateOrderType(@item.Id,$(this).val())">
                            <option value="0" @(item.OrderType == (int)SortType.None ? "selected=selected" : "")>None</option>
                            <option value="1" @(item.OrderType == (int)SortType.Asccending ? "selected=selected" : "")>Asccending</option>
                            <option value="2" @(item.OrderType == (int)SortType.Deccending ? "selected=selected" : "")>Desccending</option>
                        </select>
                    </td>
                    <td>
                        <select class="form-control action" onchange="updateAction(@item.Id,$(this))">
                            <option value="0" @(item.DuplicatedAction == 0 ? "selected=selected" : "")>Response with Error</option>
                            <option value="1" @(item.DuplicatedAction == 1 ? "selected=selected" : "")>KeepAllRows</option>
                            <option value="2" @(item.DuplicatedAction == 2 ? "selected=selected" : "")>PickupFirstValue</option>
                            <option value="3" @(item.DuplicatedAction == 3 ? "selected=selected" : "")>PickupLastValue</option>
                            <option value="4" @(item.DuplicatedAction == 4 ? "selected=selected" : "")>PickupFirstUn_NULL_value</option>
                            <option value="5" @(item.DuplicatedAction == 5 ? "selected=selected" : "")>PickupMaximumValue</option>
                            <option value="6" @(item.DuplicatedAction == 6 ? "selected=selected" : "")>PickupMinimumValue</option>
                            <option value="7" @(item.DuplicatedAction == 7 ? "selected=selected" : "")>SumAllRow</option>
                            <option value="8" @(item.DuplicatedAction == 8 ? "selected=selected" : "")>ConcatenateWithDelimiter</option>
                            
                        </select>
                        <div class="concatenate" @(item.DuplicatedAction == 8 ? "style=display:block" : "style=display:none")>
                            Concatenate With Delimiter
                            <input type="text" value="@item.ConcatenateWithDelimiter" class="txtDelimeter" maxlength="5" />
                            <input type="button" value="Save" onclick="updateConcatenate(@item.Id,$(this))" />
                        </div>
                    </td>
                </tr>
            }

        </table>

    </div>

    <div id="rules">
        <div id="chose_type">
            <ul>
                <li><a href="#ARITHMETICAL_r">ARITHMETICAL</a></li>
                <li><a href="#CONDITIONAL_r">CONDITIONAL</a></li>
                <li><a href="#FORMATTING_r">FORMATTING</a></li>
                <li><a href="#MISCELLANEOUS_r">MISCELLANEOUS</a></li>
                <li><a href="#LOOPUP_r">LOOKUP</a></li>
            </ul>
            @*<span id="btn_ARITHMETICAL">ARITHMETICAL</span>
            <span id="btn_CONDITIONAL">CONDITIONAL</span>
            <span id="btn_FORMATTING">FORMATTING</span>
            <span id="btn_MISCELLANEOUS">MISCELLANEOUS</span>*@
        </div>
        <div>
            <div id="rule_left" style="float:left">
                <div>
                    <input type="text" id="txt_input" />
                    <input type="button" id="btn_input" value="Add" onclick="addValue($('#txt_input').val())"/>
                    <div id="div_if_cmd" style="display:none">
                        <input type="button" value="ELSE IF" onclick="setElseIFNode('else if')" />
                        <input type="button" value="ELSE" onclick="setElseIFNode('else')"/>
                    </div>
                </div>
                <div style="border-radius:4px" id="ARITHMETICAL_operator">
                    <div id="plus" class="operator" onclick="addOperator('+')">+</div>
                    <div id="subtract" class="operator" onclick="addOperator('-')">-</div>
                    <div id="multifly" class="operator" onclick="addOperator('*')">*</div>
                    <div id="divide" class="operator" onclick="addOperator('/')">/</div>
                    <div style="clear:both"></div>
                </div>
                <div id="tab-2" style="width:400px;">
                    <ul>
                        <li><a href="#r_fields">Fields</a></li>
                        <li><a href="#r_rules">Rules</a></li>
                    </ul>
                    <div id="r_fields" style="border:solid 1px gray;border-radius: 5px;padding: 2px;min-height:300px"></div>
                    <div id="r_rules" style="border:solid 1px gray;border-radius: 5px;padding: 2px"></div>
                </div>
            </div>
            <div id="ARITHMETICAL_r">
                <div id="rule_right" style="float:left"></div>
                
            </div>
            <div id="CONDITIONAL_r"></div>
            <div id="FORMATTING_r"></div>
            <div id="MISCELLANEOUS_r"></div>
            <div id="LOOPUP_r"></div>
            <div style="text-align:right;margin:20px">
                <input type="button" value="Save" onclick="Save()" />
                <input type="button" value="Clear" onclick="Clear_F()" />
            </div>
            <div style="clear:both"></div>
        </div>
    </div>
    <div id="preview" style="height:400px;overflow:scroll">
        <input type="button" value="Preview" onclick="preview(@ViewBag.ID)" />
        <input type="button" value="Download" onclick="download(@ViewBag.ID)" />
        <label style="font-weight:bold; color:bisque;display:none" id="lblLoading">Loading...</label>
        <div id="tSample" style="display:none;width: 100%;background-color: #fff;">
            <table class="table">
                <tr id="header"></tr>
                <tbody id="tbody"></tbody>
            </table>
        </div>
    </div>
</div>
<div id="tRules" style="display:block;width: 100%;overflow: scroll;background-color: #fff;">
    <table class="table">
        <tr id="header">
            <th>ID</th>
            <th>Name</th>
            <th>Value</th>
            <th></th>
        </tr>
        <tbody id="tbody">
            <tr>
                <td>{{Id}}</td>
                <td>{{Name}}</td>
                <td>{{ExpValue | replace '\[\[\]\]', ','}}</td>
                <td><a href="javascript:;" onclick="deleteRule({{Id}},$(this))">Del</a></td>
            </tr>
        </tbody>
    </table>
</div>
<script type="text/javascript">
    var ls_rs = [];
    $(document).ready(function () {
        //var actions = $('#div_action tr:not(:first-child)');

        //$.each(actions, function (i, value) {
        //    var obj = {};
        //    var action=$(actions[i]);
        //    obj.name = action.find('td:eq(2)>span').text();
        //    obj.duplicateAction = action.find('td:eq(5)>select').val();
        //    obj.sortType = action.find('td:eq(4)>select').val();
        //    obj.duplicateActionType = 1;
        //    obj.str_param = 'param';

        //    ls_rs.push(obj);
        //});

        init_field();
        init_rules();
        _createTableWithJsonObj_withTemplate(rules,'tRules',false,function(){});
        initTabs();
        //$('#tab-2').tabs();
        //$('#div-tab').tabs();
        //showItemForMATH();
        //$('#rules').tabs({
        //    beforeActivate: function( event, ui ) {
        //        $('#ARITHMETICAL_operator').hide();
        //        $('#cboxCondition').hide();
        //        $('#cboxFormatting').hide();
        //        $('#cboxMISCELLANEOUS').hide();
        //        clean_cbox_selection();
        //        $('#div_if_cmd').hide();
        //        if($(event.currentTarget).attr('href')=='#ARITHMETICAL_r'){
        //            $('#ARITHMETICAL_operator').show();
        //            showItemForMATH();
                    
        //            //return;
        //        }else if($(event.currentTarget).attr('href')=='#CONDITIONAL_r'){
        //            $('#cboxCondition').show();
        //            //if($('#cboxCondition').val()=='')
                    
        //            $('#cboxCondition').trigger('change');
        //            //return;
        //        }else if($(event.currentTarget).attr('href')=='#FORMATTING_r'){
        //            $('#cboxFormatting').show();
        //            //if($('#cboxFormatting').val()=='')
        //            $('#cboxFormatting').trigger('change');
        //            //return;
        //        }
        //        else if($(event.currentTarget).attr('href')=='#MISCELLANEOUS_r'){
        //            $('#cboxMISCELLANEOUS').show();
        //            //if($('#cboxMISCELLANEOUS').val()=='')
        //            $('#cboxMISCELLANEOUS').trigger('change');
        //            //return;
        //        }


        //    }
        //});


        ////
        ////$("#tbl_sort tr").sortable({
        ////    containerSelector: 'table',
        ////    itemPath: '> tbody',
        ////    itemSelector: 'tr',
        ////    placeholder: '<tr class="placeholder"/>'
        ////});
        //generateConditionCombobox();
        //generateFormattingCombobox();
        //generateMISCELLANEOUSCombobox();
    });
    function updateOrderType(id,sort){

        $.post('@Url.Action("UpdateSortType", "SortAndAction")', { id :id,sort:sort})
            .done(function(data){

            })
            .fail();
    }
    function updateAction_all(c){
        var value=c.val();
        if(value==-1) return;
        var actions=$('#div_action>table tr>td>select.action');
        $.each(actions,function(idx,item){
            $(item).val(c.val()).trigger('change');;
        })

    }
    function updateAction(id, ac){
        if (ac.val() == "8") {
            $(ac).parent().find(".concatenate").show();
            //return;
        }else{
            $(ac).parent().find(".concatenate").hide();
            //return;
        }
        //$(ac).parent().find(".concatenate").hide();
        $.post('@Url.Action("UpdateAction", "SortAndAction")', { id :id,type:1,action:ac.val()})
            .done(function(data){

            })
            .fail();
    }
    function updateConcatenate(id,c){
        var delimeter = $(c).parent().find('.txtDelimeter').val();
        //$(c).parent().hide();
        $.post('@Url.Action("UpdateAction_concat", "SortAndAction")', { id: id, type: 2, action: 8, delimeter: delimeter })
            .done(function(data){

            })
            .fail();
    }
    function post() {
        $.post('@Url.Action("TestPost", "SortAndAction")', { ls :ls_rs})
            .done(function(data){

            })
            .fail();
    }
    function preview(id) {
        $('#lblLoading').show();
        var jqxhr = $.get('@Config.Get_local_control_site()/JSON/GetSampleWithSortAndDuplicateAction?fileid='+id+'&limit=1000')
                .done(function (data) {

                    _createTableWithArrObj(data,'tSample',false,1000);

                })
                .fail(function (request, status, error) {
                    try {
                        var json = $.parseJSON(request.responseText);
                        alert(json.errorMessage);
                    } catch(e) {
                        alert('something bad happened');
                    }

                })
                .always(function () {
                    $('#lblLoading').hide();
                });

        ///

    }
    function download(id) {
        $('#lblLoading').show();
        var jqxhr = $.get('@Config.Get_local_control_site()/JSON/GetSampleWithSortAndDuplicateAction?fileid='+id+'&limit=20000000000&writeFile=true')
                .done(function () {
                    var state='@ViewBag.WorkingSetInfo.State';
                    var county='@ViewBag.WorkingSetInfo.County';
                    var filename='@ViewBag.Filename';
                    window.location.href='@Config.Get_local_control_site()/File/Download_tmp/?state='+state+'&county='+county+'&filename='+filename;

                })
                .fail(function (request, status, error) {
                    try {
                        var json = $.parseJSON(request.responseText);
                        alert(json.errorMessage);
                    } catch(e) {
                        alert('something bad happened');
                    }

                })
                .always(function () {
                    $('#lblLoading').hide();
                });
    }
    function deleteRule(id,$btn){
        $.post('@Url.Action("deleteRule", "SortAndAction")/?id='+id)
                .done(function () {

                })
                .fail(function (request, status, error) {
                    try {
                        var json = $.parseJSON(request.responseText);
                        alert(json.errorMessage);
                    } catch(e) {
                        alert('something bad happened');
                    }

                })
                .always(function () {
                    init_rules();
                    _createTableWithJsonObj_withTemplate(rules,'tRules',false,function(){});
                });
    }
    var rules=@Html.Raw(ViewBag.Rules);
    var fields=@Html.Raw(ViewBag.Fields);
    var fieldTypes=@Html.Raw(ViewBag.FieldTypes);

    function init_field(){
        var r_fields=$('#r_fields');
        initField_ready(r_fields,fields,fieldTypes);
        //$.each(fields,function(idx,item){
        //    var fieldType=_.findWhere(fieldTypes,{name:item});//{ name="ACCOUNT_NUMBER",  type=1}
        //    if(fieldType==undefined) return;
        //    if(fieldType.type==0){
        //        r_fields.append($('<div class="f_item number" onclick="genUI(\''+item+'\',\'number\')">').html(item).append($('<span>'))
        //            );
        //    }
        //    else if(fieldType.type==1){
        //        r_fields.append($('<div class="f_item string" onclick="genUI(\''+item+'\',\'string\')">').html(item).append($('<span>'))
        //            );
        //    }
        //    //r_fields.append($('<div class="f_item number" onclick="genUI(\'ARITHMETICAL\',\''+item+'\')">').html(item)
        //    //    //.append($('<span>').html(fieldType.type))
        //    //    );
        //});
    }
    function init_rules(){
        $.post('@Url.Action("getRules", "SortAndAction")',{id:@ViewBag.ID})
                .done(function(data){

                    var js_data=JSON.parse(data);
                    rules=js_data;
                    //init_rules();
                })
                .fail(function(){
                    alert("err");
                })
                .always(function(){
                    var r_rules=$('#r_rules');
                    initRule_ready(r_rules,rules);
                    //r_rules.find("div").remove();
                    //$.each(rules,function(idx,item){
                    //    if(item.Type==0 || item.Type==3){
                    //        r_rules.append($('<div class="f_item number" onclick="genUI(\''+item.Name+'\',\'number\')">').html(item.Name).append($('<span>'))
                    //            );
                    //    }
                    //    else if(item.Type==1){
                    //        r_rules.append($('<div class="f_item string" onclick="genUI(\''+item.Name+'\',\'string\')">').html(item.Name).append($('<span>'))
                    //            );
                    //    }
                    //    else if(item.Type==2){
                    //        r_rules.append($('<div class="f_item bool" onclick="genUI(\''+item.Name+'\',\'bool\')">').html(item.Name).append($('<span>'))
                    //            );
                    //    }
                    //    else if(item.Type==4){
                    //        r_rules.append($('<div class="f_item bool" onclick="genUI(\''+item.Name+'\',\'object\')">').html(item.Name).append($('<span>'))
                    //            );
                    //    }
                    //    //r_fields.append($('<div class="f_item number" onclick="genUI(\'ARITHMETICAL\',\''+item+'\')">').html(item)
                    //    //    //.append($('<span>').html(fieldType.type))
                    //    //    );
                    //});
                    _createTableWithJsonObj_withTemplate(rules,'tRules',false,function(){});
                    if($( "#rules" ).tabs( "option", "active" )==0){
                        showItemForMATH();
                    }
                });
        
    }
    
    //function genUI(value,type){

    //    var r_panel=$('#rule_right');
    //    var str_rs=r_panel.text();
    //    if(currentRule.name=='IF'){
    //        addValue('{'+value+'}');
    //        return;
    //    }
    //    //if(str_rs.indexOf('-')>0 ||
    //    //    str_rs.indexOf('*')>0 ||
    //    //    str_rs.indexOf('/')>0){
    //    //    var fieldType=_.findWhere(fieldTypes,{name:value});//{ name="ACCOUNT_NUMBER",  type=1}
    //    //    if(fieldType.type!=0)
    //    //    {
    //    //        alert("Data type should be numeric value");
    //    //        return;
    //    //    }
    //    //}

    //    if($( "#rules" ).tabs( "option", "active" )==0){
    //        if($('#rule_right').find('div:last-child').hasClass('op')
    //            ||
    //            $('#rule_right').find('div').length==0)
    //            r_panel.append($('<div class="pi '+type+'">').html('{'+value+'}'));
    //        return;
    //    }
    //    if(currentRule==null){
    //        alert("Please select A FUNCTION");
    //        return;
    //    }
    //    var display=getDisplay_forRule();
    //    currentRule.addParam({value:'{'+value+'}',type:type});
    //    display.html('').append($('<div>').html(currentRule.showResult()));
    //    //if($( "#rules" ).tabs( "option", "active" )==1){

    //    //    currentRule.addParam({value:'{'+value+'}',type:type});
    //    //    $('#CONDITIONAL_r').html('').append($('<div>').html(currentRule.showResult()));
    //    //}else if($( "#rules" ).tabs( "option", "active" )==2){

    //    //    currentRule.addParam({value:'{'+value+'}',type:type});
    //    //    $('#FORMATTING_r').html('').append($('<div>').html(currentRule.showResult()));
    //    //}else if($( "#rules" ).tabs( "option", "active" )==3){

    //    //    currentRule.addParam({value:'{'+value+'}',type:type});
    //    //    $('#MISCELLANEOUS_r').html('').append($('<div>').html(currentRule.showResult()));
    //    //}
    //}
    function addOperator(value){
        var r_panel=$('#rule_right');

        if(value=='-' ||
            value=='*' ||
            value=='/'){
            var p_items=$('#rule_right .pi');

            if(p_items.hasClass('string')){
                alert("Operator is accepted NUMERIC TYPE ONLY");
                return;
            }
        }
        if($('#rule_right').find('div:last-child').hasClass('pi') ||
            $('#rule_right').find('div:last-child').hasClass('va'))
            r_panel.append($('<div class="op">').html(value));
    }
    //function addValue(value){
    //    var r_panel=$('#rule_right');
    //    var $display=$('#CONDITIONAL_r');
    //    if($( "#rules" ).tabs( "option", "active" )==1){
    //        $display=$('#CONDITIONAL_r');
    //    }else if($( "#rules" ).tabs( "option", "active" )==2){
    //        $display=$('#FORMATTING_r');
    //    }
    //    else if($( "#rules" ).tabs( "option", "active" )==3){
    //        $display=$('#MISCELLANEOUS_r');
    //    }
        
    //    if($( "#rules" ).tabs( "option", "active" )==0){
    //        if($('#rule_right').find('div:last-child').hasClass('op')
    //            ||
    //            $('#rule_right').find('div').length==0)
    //            r_panel.append($('<div class="va">').html(value));
    //    }else{
    //        if(currentRule.name=='IF'){

    //            return;
    //        }
    //        var nextAcceptType=currentRule.acceptType[currentRule.params.length];            
    //        //console.log(nextAcceptType);
    //        if(nextAcceptType==undefined) return;
            
    //        // simple type
    //        if(typeof nextAcceptType=='string'){
    //            if(nextAcceptType=='number'){
    //                if(!$.isNumeric(value)){
    //                    alert("A numeric input is required");
    //                    return;
    //                }
    //                currentRule.addParam({value:value,type:'number'});
    //                $display.html('').append($('<div>').html(currentRule.showResult()));
    //            }else{
    //                currentRule.addParam({value:value,type:nextAcceptType});
    //                $display.html('').append($('<div>').html(currentRule.showResult()));
    //            }


    //        }else{
    //            //var acType;
    //            //var tmpValue=value;
    //            //for (var i = 0; i < nextAcceptType.length; i++) {
    //            //    var acType=nextAcceptType[i];
    //            //    if(acType=='string'){

    //            //    }else if(acType=='number'){
    //            //        tmpValue=
    //            //    }

    //            //}
    //            //currentRule.addParam({value:value,type:acType});
    //            //$display.html('').append($('<div>').html(currentRule.showResult()));
    //        }

    //    }
    //}
    
    function Save(){
        //var str_rs=$('#rule_right').text();
        //var html=$('#rule_right').html();

        //var d={};
        //d.ExpValue=str_rs;//exp=MATH exp
        //d.HTMLBack=html;
        //d.Type=0;
        //if($( "#rules" ).tabs( "option", "active" )!=0){//neu ko phai tab MATH
        //    d.ExpValue=currentRule.result();
        //    d.HTMLBack=$('#CONDITIONAL_r').html();

        //}
        //if($( "#rules" ).tabs( "option", "active" )==1){
        //    d.Type=2;
        //    if($('#cboxCondition').val()=="IF"){
        //        d.Type=4;
        //    }
        //}else if($( "#rules" ).tabs( "option", "active" )==2){
        //    d.Type=1;
        //}
        //else if($( "#rules" ).tabs( "option", "active" )==3){
        //    d.Type=3;
        //    if($('#cboxMISCELLANEOUS').val()=="AS_IS"){
        //        d.Type=4;
        //    }
        //}
        var d=genRuleData();
        

        $.post('@Url.Action("addRuleMath","SortAndAction")',{fileid:@ViewBag.Fileid,rule:d})
        .done(function (data) {
            rules.push(data);
            _createTableWithJsonObj_withTemplate(rules,'tRules',false,function(){});
            genUI_afterSaveRule(data);
            clean_cbox_selection();
            currentRule = {};

        })
                .fail(function (request, status, error) {
                    try {
                        var json = $.parseJSON(request.responseText);
                        alert(json.errorMessage);
                    } catch(e) {
                        alert('something bad happened');
                    }

                })
                .always(function () {
                    $('#lblLoading').hide();
                });;
    }
</script>
<script type="text/javascript">
    
    function generateConditionCombobox(){
        
        var $select=$('<select id="cboxCondition" style="display:none" onchange="filter($(this).val(),true)" >');
        var options=[
            '',
            'AND',
            'CONTAINS',
            'EQUAL',
            'GREATER_THAN',
            'GREATER_THAN_OR_EQUAL',
            'IF',
            'IS_ALPHA',
            'IS_NULL',
            'IS_NUMERIC',
            'LESS_THAN',
            'LESS_THAN_OR_EQUAL',
            'NOT',
            'NOT_CONTAINS',
            'NOT_EQUAL',
            'OR',
            'RANGE',
            'STARTS_WITH'];
        for (var i = 0; i < options.length; i++) {
            $select.append($('<option value="'+options[i]+'">').html(options[i]));
        }
        $('#rule_left').prepend($select);
    }
    function generateFormattingCombobox(){
        
        var $select=$('<select id="cboxFormatting" style="display:none" onchange="filter($(this).val(),true)" >');
        var options=[
            '',
            'CONCATENATE',
            'JOIN',
            'LEFT_PAD',
            'LEFT_TRIM',
            'REMOVE_CHARACTERS',
            'REPLACE_STRING',
            'REPLACE_CONTAINS',
            'RIGHT_PAD',
            'RIGHT_TRIM',
            'TRIM_ALL',
            'SPLIT',
            'SUB_STRING',
            'UPPER'
        ];
        for (var i = 0; i < options.length; i++) {
            $select.append($('<option value="'+options[i]+'">').html(options[i]));
        }
        $('#rule_left').prepend($select);
    }
    function generateMISCELLANEOUSCombobox(){
        
        var $select=$('<select id="cboxMISCELLANEOUS" style="display:none" onchange="filter($(this).val(),true)" >');
        var options=[
            '',
            'AS_IS',
            'LAST_POSITION_OF',
            'LENGTH',
            'MAX',
            'MIN',
            'POSITION_OF',
            'ROUND',
            'STRING_COUNT',
            'SPLIT',
            'SUM_ALL'];
        for (var i = 0; i < options.length; i++) {
            $select.append($('<option value="'+options[i]+'">').html(options[i]));
        }
        $('#rule_left').prepend($select);
    }
    function filter(selected_rule,isClear){
        selectedRuleFilter(selected_rule,isClear);
        return;

        var $display=$('#CONDITIONAL_r');
        if($( "#rules" ).tabs( "option", "active" )==1){
            $display=$('#CONDITIONAL_r');
        }else if($( "#rules" ).tabs( "option", "active" )==2){
            $display=$('#FORMATTING_r');
        }
        else if($( "#rules" ).tabs( "option", "active" )==3){
            $display=$('#MISCELLANEOUS_r');
        }
        if(selected_rule==''){
            $('.f_item').show();
            currentRule=null;
            $display.html('');
            return;
        }
        //check rule IF
        if(currentRule.Name==="IF"){
            $('#div_if_cmd').show();
            return;
        }
        $('#div_if_cmd').hide();
        for (var i = 0; i < app_rules.length; i++) {
            var rule=app_rules[i];
            if(rule.name==selected_rule){
                currentRule=rule;//set current rule, selected
                if(isClear)
                    rule.params=[];//clear params
                var nextAcceptType=rule.acceptType[rule.params.length];
                $('.f_item').hide();
                $(genSeletor('.f_item',nextAcceptType)).show();
                
            }
        }
        
        $display.html(currentRule.showResult());
    }
    function genNOTSeletor(type){
        if(type=='any') return '';
        return ':not(.'+type+')';
    }
    function genSeletor(prefix,type){
        if(type=='any')
            return prefix;
        var arr=[];
        if(typeof type=="object")
        {
            for (var i = 0; i < type.length; i++) {
                arr.push(prefix+'.'+type[i]);
            }
            return arr.join();
        }
        return prefix+'.'+type;
    }
    var dynamicRules=[];
</script>
@{
    var farules = (List<BL.FACodeTable>)ViewBag.FARules;
    foreach (var farule in farules)
    {
        <script>
            var r_@(farule.TableNameID)= new IRule("@farule.TableNameID", "@farule.TableNameID", default_limit, ':');
            r_@(farule.TableNameID).setAcceptTypes([at.any]);
            r_@(farule.TableNameID).result = function () {
                return this.F + ':' + this.params.join(this.delimiter);
            }
            r_@(farule.TableNameID).showResult = function () {
                var str = "";
                var r1 = "";
                if (this.params.length >= 1) {
                    r1 = this.params[0].replace(/{|}/g, "");
                }
                var $lbl = '<tr><th class="lbl-arg">Lookup Data : </th>';
                var $arg = '<td class="arg"> ' + this.F + '</td></tr>';
                str += $lbl + $arg;
                $lbl = '<tr><th class="lbl-arg">Field : </th>';
                $arg = '<td class="arg"> ' + r1 + '</td></tr>';
                str += $lbl + $arg;
                return '' + '<table>' + str + '</table>';
            }
            app_rules.push(r_@(farule.TableNameID));
            dynamicRules.push(r_@(farule.TableNameID));
        </script>
    }
}
<script>
    //dynamic Rules
    function generateLookupCombobox(){

        var $select=$('<select id="cboxLookup" style="display:none" onchange="filter($(this).val(),true)" >');
        var options=[];
        for (var i = 0; i < dynamicRules.length; i++) {
            options.push(dynamicRules[i].F);
        }
        for (var i = 0; i < options.length; i++) {
            $select.append($('<option value="'+options[i]+'">').html(options[i]));
        }
        $('#rule_left').prepend($select);
    }
</script>